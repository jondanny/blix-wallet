{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/create-wallet": {
      "post": {
        "operationId": "Web3Controller_createWallet",
        "summary": "",
        "description": "Create wallet for a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "Validation failed (uuid is expected)"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/balance": {
      "get": {
        "operationId": "Web3Controller_getBalance",
        "summary": "",
        "description": "Get user's Matic balance",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transfer-matic": {
      "post": {
        "operationId": "Web3Controller_transferMatic",
        "summary": "",
        "description": "Transfer matic to another user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaticTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/transfer-nft": {
      "post": {
        "operationId": "Web3Controller_transferNft",
        "summary": "",
        "description": "Transfer NFT to another user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NftTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/nft": {
      "get": {
        "operationId": "NftController_findAll",
        "summary": "",
        "description": "Get all nfts by wallet address",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nft"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "NftController_create",
        "summary": "",
        "description": "Add nft and owner info to Nft table when minting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NftCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nft"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction-matic": {
      "get": {
        "operationId": "TransactionMaticController_findAllPaginated",
        "summary": "",
        "description": "Get all transactions by wallet address",
        "parameters": [
          {
            "name": "afterCursor",
            "required": false,
            "in": "query",
            "description": "Paginates results forward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beforeCursor",
            "required": false,
            "in": "query",
            "description": "Paginates results backward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderParam",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "enum": [
                "createdAt",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderType",
            "required": false,
            "in": "query",
            "example": "ASC",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "walletAddress",
            "required": false,
            "in": "query",
            "example": "8e9c3708-25d8-467f-9a68-00507f8ece4a",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionMatic"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "Validation failed (uuid is expected)"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction-nft": {
      "get": {
        "operationId": "TransactionNftController_findAllPaginated",
        "summary": "",
        "description": "Get all transactions by wallet address",
        "parameters": [
          {
            "name": "afterCursor",
            "required": false,
            "in": "query",
            "description": "Paginates results forward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beforeCursor",
            "required": false,
            "in": "query",
            "description": "Paginates results backward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderParam",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "enum": [
                "createdAt",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderType",
            "required": false,
            "in": "query",
            "example": "ASC",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "walletAddress",
            "required": false,
            "in": "query",
            "example": "8e9c3708-25d8-467f-9a68-00507f8ece4a",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionNft"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "Validation failed (uuid is expected)"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Blix Wallet",
    "description": "Blix Wallet API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": ""
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "Api-Key"
      }
    },
    "schemas": {
      "WalletCreateDto": {
        "type": "object",
        "properties": {
          "userUuid": {
            "type": "string",
            "example": "279c0aba-cb39-4e2b-adf1-f0a9d42652ab",
            "description": "Uuid of new wallet owner"
          }
        },
        "required": [
          "userUuid"
        ]
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "userUuid": {
            "type": "string",
            "description": "User unique uuid",
            "maximum": 36
          },
          "walletAddress": {
            "type": "string",
            "description": "User's wallet address",
            "maximum": 64
          },
          "privateKey": {
            "type": "string",
            "description": "Wallet private key",
            "maximum": 66
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated at date"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Deleted at date"
          }
        },
        "required": [
          "userUuid",
          "walletAddress",
          "privateKey",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "MaticTransferDto": {
        "type": "object",
        "properties": {
          "userUuidFrom": {
            "type": "string",
            "example": "279c0aba-cb39-4e2b-adf1-f0a9d42652ab",
            "description": "Uuid of sender"
          },
          "walletAddressTo": {
            "type": "string",
            "example": "0x2DE1918966c679aDF5bcb257bfD8588f011693EE",
            "description": "Wallet address of receiver"
          },
          "amount": {
            "type": "number",
            "example": 0.1,
            "description": "Amount of Matic"
          }
        },
        "required": [
          "userUuidFrom",
          "walletAddressTo",
          "amount"
        ]
      },
      "NftTransferDto": {
        "type": "object",
        "properties": {
          "userUuidFrom": {
            "type": "string",
            "example": "279c0aba-cb39-4e2b-adf1-f0a9d42652ab",
            "description": "Uuid of Nft sender"
          },
          "walletAddressTo": {
            "type": "string",
            "example": "0x2DE1918966c679aDF5bcb257bfD8588f011693EE",
            "description": "Wallet address of Nft receiver"
          },
          "tokenId": {
            "type": "number",
            "example": 1,
            "description": "Token id of ERC721 Nft"
          }
        },
        "required": [
          "userUuidFrom",
          "walletAddressTo",
          "tokenId"
        ]
      },
      "Nft": {
        "type": "object",
        "properties": {
          "walletAddress": {
            "type": "string",
            "description": "Wallet address of Nft owner",
            "maximum": 64
          },
          "tokenId": {
            "type": "number",
            "description": "Token Id of this Nft"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated at date"
          }
        },
        "required": [
          "walletAddress",
          "tokenId",
          "createdAt",
          "updatedAt"
        ]
      },
      "NftCreateDto": {
        "type": "object",
        "properties": {}
      },
      "TransactionMatic": {
        "type": "object",
        "properties": {
          "walletAddressFrom": {
            "type": "string",
            "description": "Wallet address of Matic sender",
            "maximum": 64
          },
          "walletAddressTo": {
            "type": "string",
            "description": "Wallet address of Matic receiver",
            "maximum": 64
          },
          "amount": {
            "type": "number",
            "description": "Matic amount transfered"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at date"
          }
        },
        "required": [
          "walletAddressFrom",
          "walletAddressTo",
          "amount",
          "createdAt"
        ]
      },
      "TransactionNft": {
        "type": "object",
        "properties": {
          "walletAddressFrom": {
            "type": "string",
            "description": "Wallet address of Nft sender",
            "maximum": 64
          },
          "walletAddressTo": {
            "type": "string",
            "description": "Wallet address of Nft receiver",
            "maximum": 64
          },
          "tokenId": {
            "type": "number",
            "description": "Nft Id transfered"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at date"
          }
        },
        "required": [
          "walletAddressFrom",
          "walletAddressTo",
          "tokenId",
          "createdAt"
        ]
      }
    }
  }
}